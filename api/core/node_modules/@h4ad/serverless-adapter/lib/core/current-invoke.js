"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setCurrentInvoke = exports.getCurrentInvoke = exports.__ΩCurrentInvoke = void 0;
const __ΩCurrentInvoke = ['TEvent', 'TContext', 'event', 'context', 'b!b"PPe#!,J4#Pe#",J4$M'];
exports.__ΩCurrentInvoke = __ΩCurrentInvoke;
const currentInvoke = {
    context: null,
    event: null,
};
/**
 * Get the reference to the event created by the serverless trigger or context created by the serverless environment.
 *
 * @example
 * ```typescript
 * import type { ALBEvent, Context } from 'aws-lambda';
 *
 * // inside the method that handles the aws alb request.
 * const { event, context } = getCurrentInvoke<ALBEvent, Context>();
 * ```
 *
 * @breadcrumb Core / Current Invoke
 * @public
 */
function getCurrentInvoke() {
    return currentInvoke;
}
exports.getCurrentInvoke = getCurrentInvoke;
getCurrentInvoke.__type = [() => __ΩCurrentInvoke, 'getCurrentInvoke', 'P""o!#/"'];
/**
 * Method that saves to the event created by the serverless trigger or context created by the serverless environment.
 *
 * @remarks This method MUST NOT be called by you, this method MUST only be used internally in this library.
 *
 * @param event - The event created by the serverless trigger
 * @param context - The context created by the serverless environment
 *
 * @breadcrumb Core / Current Invoke
 * @public
 */
function setCurrentInvoke({ event, context, }) {
    currentInvoke.event = event;
    currentInvoke.context = context;
}
exports.setCurrentInvoke = setCurrentInvoke;
setCurrentInvoke.__type = [() => __ΩCurrentInvoke, 'param0', 'setCurrentInvoke', 'P""o!#2""/#'];
//# sourceMappingURL=current-invoke.js.map