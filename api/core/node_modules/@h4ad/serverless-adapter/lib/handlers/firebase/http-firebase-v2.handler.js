"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpFirebaseV2Handler = void 0;
const { __ΩFrameworkContract } = require('../../contracts');
const __ΩReturnType = ['T', 'args', '', 'l>e"!R"RPde#!P"@2"h"!/#qk#\'QRb!Pde"!p)'];
//#region Imports
// eslint-disable-next-line import/no-unresolved
const v2_1 = require("firebase-functions/v2");
const base_1 = require("../base");
//#endregion
/**
 * The class that implements a handler for Firebase Https Events
 *
 * @remarks Read more about Https Events {@link https://firebase.google.com/docs/functions/http-events | here}
 *
 * @breadcrumb Handlers / HttpFirebaseHandler
 * @public
 */
class HttpFirebaseV2Handler extends base_1.RawRequest {
    //#region Constructor
    /**
     * Construtor padrão
     */
    constructor(options) {
        super();
        this.options = options;
    }
    //#endregion
    //#region Public Methods
    /**
     * {@inheritDoc}
     */
    getHandler(app, framework) {
        if (this.options) {
            return this.onRequestWithOptions(this.options, this.onRequestCallback(app, framework));
        }
        return v2_1.https.onRequest(this.onRequestCallback(app, framework));
    }
    //#endregion
    //#region Protected Method
    /**
     * Wrapper method around onRequest for better testability
     */
    onRequestWithOptions(options, callback) {
        return v2_1.https.onRequest(options, callback);
    }
}
exports.HttpFirebaseV2Handler = HttpFirebaseV2Handler;
HttpFirebaseV2Handler.__type = ['TApp', () => base_1.RawRequest, 'options', 'constructor', 'app', () => __ΩFrameworkContract, 'framework', () => __ΩReturnType, () => HttpFirebaseV2Handler, "onRequestCallback", 'getHandler', () => __ΩReturnType, () => HttpFirebaseV2Handler, "onRequestCallback", 'callback', () => __ΩReturnType, () => HttpFirebaseV2Handler, "onRequestCallback", 'onRequestWithOptions', 'b!Pe"!7"P!2#8<9"0$Pe"!2%e"!o&"2\'Pe#!7).*fo("0+P!2#Pe#!7-..fo,"2/Pe#!71.2fo0"03<5e!!6"'];
//# sourceMappingURL=http-firebase-v2.handler.js.map