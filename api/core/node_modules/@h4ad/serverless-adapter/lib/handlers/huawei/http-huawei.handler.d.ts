/// <reference types="node" />
import * as http from 'http';
import { RequestListener } from 'http';
import { BinarySettings } from '../../@types';
import { AdapterContract, FrameworkContract, HandlerContract, ResolverContract, ServerlessHandler } from '../../contracts';
import { ILogger } from '../../core';
/**
 * The default port that huawei will proxy the request to your framework
 *
 * {@link https://support.huaweicloud.com/intl/en-us/ae-ad-1-usermanual-functiongraph/functiongraph_01_1442.html#functiongraph_01_1442__li194597302096 | Reference}
 *
 * @breadcrumb Handlers / HttpHuaweiHandler
 * @public
 */
export declare const DEFAULT_HUAWEI_LISTEN_PORT: number;
/**
 * The options to customize {@link HttpHuaweiHandler}
 *
 * @breadcrumb Handlers / HttpHuaweiHandler
 * @public
 */
export declare type HttpHuaweiHandlerOptions = {
    /**
     * @defaultValue {@link DEFAULT_HUAWEI_LISTEN_PORT}
     */
    port?: number;
    /**
     * The factory to create a http server to use to listen huawei requests
     */
    httpServerFactory?: (requestListener: RequestListener) => http.Server;
};
/**
 * The class that implements a huawei serverless handler with http function that exposes a http server in specific port.
 *
 * In this Handler, you don't need to specific resolver and adapter, so you can use DummyAdapter and DummyResolver instead.
 *
 * @see https://support.huaweicloud.com/intl/en-us/ae-ad-1-usermanual-functiongraph/functiongraph_01_1442.html#functiongraph_01_1442__li194597302096
 *
 * @breadcrumb Handlers / HttpHuaweiHandler
 * @public
 */
export declare class HttpHuaweiHandler<TApp> implements HandlerContract<TApp, void, void, void, void, Promise<void>> {
    protected readonly options?: HttpHuaweiHandlerOptions | undefined;
    /**
     * Construtor padrão
     */
    constructor(options?: HttpHuaweiHandlerOptions | undefined);
    /**
     * {@inheritDoc}
     */
    getHandler(app: TApp, framework: FrameworkContract<TApp>, _: AdapterContract<void, void, void>[], __: ResolverContract<void, void, void, void, void>, binarySettings: BinarySettings, respondWithErrors: boolean, log: ILogger): ServerlessHandler<Promise<void>>;
    /**
     * The method that creates the instance of http server
     *
     * @param requestListener - O método que lidará com as requisições recebidas
     */
    protected createHttpServer(requestListener: RequestListener): http.Server;
}
export declare type __ΩHttpHuaweiHandlerOptions = any[];
