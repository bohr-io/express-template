"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DigitalOceanHandler = void 0;
const { __ΩDigitalOceanHttpEvent } = require('../../@types/digital-ocean');
const { __ΩFrameworkContract } = require('../../contracts');
const { __ΩAdapterContract } = require('../../contracts');
const { __ΩResolverContract } = require('../../contracts');
const { __ΩBinarySettings } = require('../../@types');
const { __ΩILogger } = require('../../core');
const { __ΩServerlessHandler } = require('../../contracts');
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
const default_1 = require("../default");
//#endregion
/**
 * The class that implements a serverless handler for Digital Ocean Functions.
 *
 * @breadcrumb Handlers / DigitalOceanHandler
 * @public
 */
class DigitalOceanHandler extends default_1.DefaultHandler {
    /**
     * {@inheritDoc}
     */
    getHandler(app, framework, adapters, resolverFactory, binarySettings, respondWithErrors, log) {
        const defaultHandler = super.getHandler(app, framework, adapters, resolverFactory, binarySettings, respondWithErrors, log);
        return __assignType((event) => defaultHandler(event, undefined, undefined), [() => __ΩDigitalOceanHttpEvent, 'event', '', 'Pn!2""/#']);
    }
}
exports.DigitalOceanHandler = DigitalOceanHandler;
DigitalOceanHandler.__type = ['TApp', 'TEvent', 'TResponse', 'TReturn', () => default_1.DefaultHandler, 'app', () => __ΩFrameworkContract, 'framework', () => __ΩAdapterContract, 'adapters', () => __ΩResolverContract, 'resolverFactory', () => __ΩBinarySettings, 'binarySettings', 'respondWithErrors', () => __ΩILogger, 'log', () => __ΩServerlessHandler, 'getHandler', 'b!b"b#b$Pe"!e""$$e"#e"$7%Pe"!2&e"!o\'"2(e""$e"#o)$F2*e""$$e"#e"$o+&2,n-2.)2/n021e"$o2"035e!!e!"$$e!#e!$6\''];
//# sourceMappingURL=digital-ocean.handler.js.map