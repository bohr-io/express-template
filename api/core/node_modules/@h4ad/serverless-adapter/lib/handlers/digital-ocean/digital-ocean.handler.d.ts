import { BinarySettings } from '../../@types';
import { AdapterContract, FrameworkContract, ResolverContract, ServerlessHandler } from '../../contracts';
import { ILogger } from '../../core';
import { DefaultHandler } from '../default';
/**
 * The class that implements a serverless handler for Digital Ocean Functions.
 *
 * @breadcrumb Handlers / DigitalOceanHandler
 * @public
 */
export declare class DigitalOceanHandler<TApp, TEvent, TResponse, TReturn> extends DefaultHandler<TApp, TEvent, void, void, TResponse, TReturn> {
    /**
     * {@inheritDoc}
     */
    getHandler(app: TApp, framework: FrameworkContract<TApp>, adapters: AdapterContract<TEvent, void, TResponse>[], resolverFactory: ResolverContract<TEvent, void, void, TResponse, TReturn>, binarySettings: BinarySettings, respondWithErrors: boolean, log: ILogger): ServerlessHandler<TReturn>;
}
