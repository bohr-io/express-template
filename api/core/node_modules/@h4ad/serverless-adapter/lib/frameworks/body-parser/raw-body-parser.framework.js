"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RawBodyParserFramework = exports.__ΩRawBodyParserFrameworkOptions = void 0;
const { __ΩFrameworkContract } = require('../../contracts');
const { __ΩBodyParserOptions } = require('./base-body-parser.framework');
//#region Imports
const body_parser_1 = require("body-parser");
const base_body_parser_framework_1 = require("./base-body-parser.framework");
const __ΩRawBodyParserFrameworkOptions = [() => __ΩBodyParserOptions, 'P!n!K'];
exports.__ΩRawBodyParserFrameworkOptions = __ΩRawBodyParserFrameworkOptions;
/**
 * The body-parser class used to parse application/octet-stream.
 *
 * @breadcrumb Frameworks / BodyParserFramework / RawBodyParserFramework
 * @public
 */
class RawBodyParserFramework extends base_body_parser_framework_1.BaseBodyParserFramework {
    //#region Constructor
    /**
     * Default Constructor
     */
    constructor(framework, options) {
        super(framework, (0, body_parser_1.raw)(options), options);
        this.framework = framework;
    }
}
exports.RawBodyParserFramework = RawBodyParserFramework;
RawBodyParserFramework.__type = ['TApp', () => base_body_parser_framework_1.BaseBodyParserFramework, () => __ΩFrameworkContract, 'framework', () => __ΩRawBodyParserFrameworkOptions, 'options', 'constructor', 'b!Pe"!7"Pe"!o#"2$<9n%2&8"0\'5e!!6"'];
//# sourceMappingURL=raw-body-parser.framework.js.map