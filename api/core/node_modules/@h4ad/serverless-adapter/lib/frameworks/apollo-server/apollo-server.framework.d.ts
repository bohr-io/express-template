/// <reference types="node" />
import { IncomingMessage, ServerResponse } from 'http';
import { ApolloServer, BaseContext } from '@apollo/server';
import { FrameworkContract } from '../../contracts';
import { ServerlessRequest } from '../../network';
/**
 * The default context of Apollo Server when you integrate and don't pass any context.
 *
 * @breadcrumb Frameworks / ApolloServerFramework
 * @public
 */
export interface DefaultServerlessApolloServerContext extends BaseContext {
    /**
     * The request reference
     */
    request: IncomingMessage;
    /**
     * The response reference
     */
    response: ServerResponse;
}
/**
 * The arguments used to create a Context inside {@link ApolloServerOptions}
 *
 * @breadcrumb Frameworks / ApolloServerFramework
 * @public
 */
export declare type ApolloServerContextArguments = {
    /**
     * The request reference
     */
    request: IncomingMessage;
    /**
     * The response reference
     */
    response: ServerResponse;
};
/**
 * The options to customize {@link ApolloServerFramework}
 *
 * @breadcrumb Frameworks / ApolloServerFramework
 * @public
 */
export interface ApolloServerOptions<TContext extends BaseContext> {
    /**
     * Define a function to create the context of Apollo Server
     *
     * @param options - Default options passed by library
     */
    context?: (options: ApolloServerContextArguments) => Promise<TContext>;
}
/**
 * The framework that forwards requests to Apollo Server
 *
 * @breadcrumb Frameworks / ApolloServerFramework
 * @public
 */
export declare class ApolloServerFramework<TContext extends BaseContext> implements FrameworkContract<ApolloServer<TContext>> {
    protected readonly options?: ApolloServerOptions<TContext> | undefined;
    /**
     * Construtor padr達o
     */
    constructor(options?: ApolloServerOptions<TContext> | undefined);
    /**
     * {@inheritDoc}
     */
    sendRequest(app: ApolloServer<TContext>, request: ServerlessRequest, response: ServerResponse): void;
}
export declare type __立DefaultServerlessApolloServerContext = any[];
export declare type __立ApolloServerContextArguments = any[];
export declare type __立ApolloServerOptions = any[];
