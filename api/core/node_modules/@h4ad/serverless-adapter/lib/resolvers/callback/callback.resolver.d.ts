import { Resolver, ResolverContract, ResolverProps } from '../../contracts';
/**
 * The default signature of the callback sent by serverless
 *
 * @breadcrumb Resolvers / CallbackResolver
 * @public
 */
export declare type ServerlessCallback<TResponse> = (error: Error | null, success: TResponse | null) => void;
/**
 * The class that implements the resolver using the callback function sent by serverless
 *
 * @remarks To use this resolver on AWS, you MUST leave `{@link https://docs.aws.amazon.com/lambda/latest/dg/nodejs-context.html | callbackWaitsForEmptyEventLoop}` as true, otherwise, AWS will not wait for this resolver to resolve.
 *
 * @breadcrumb Resolvers / CallbackResolver
 * @public
 */
export declare class CallbackResolver<TEvent, TContext, TResponse> implements ResolverContract<TEvent, TContext, ServerlessCallback<any>, TResponse, void> {
    /**
     * {@inheritDoc}
     */
    createResolver({ callback, event, log, respondWithErrors, adapter, }: ResolverProps<TEvent, TContext, ServerlessCallback<any>, TResponse>): Resolver<any, void>;
}
export declare type __Î©ServerlessCallback = any[];
