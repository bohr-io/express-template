"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DummyAdapter = void 0;
const { __ΩAdapterRequest } = require('../../contracts');
const { __ΩIEmptyResponse } = require('../../core');
const { __ΩOnErrorProps } = require('../../contracts');
const core_1 = require("../../core");
//#endregion
/**
 * The class that represents a dummy adapter that does nothing and can be used by the cloud that doesn't use adapters.
 *
 * @breadcrumb Adapters / DummyAdapter
 * @public
 */
class DummyAdapter {
    /**
     * {@inheritDoc}
     */
    canHandle() {
        return true;
    }
    /**
     * {@inheritDoc}
     */
    getAdapterName() {
        return DummyAdapter.name;
    }
    /**
     * {@inheritDoc}
     */
    getRequest() {
        return {
            method: 'POST',
            body: void 0,
            path: '/dummy',
            headers: {},
        };
    }
    /**
     * {@inheritDoc}
     */
    getResponse() {
        return core_1.EmptyResponse;
    }
    /**
     * {@inheritDoc}
     */
    onErrorWhileForwarding(props) {
        props.delegatedResolver.succeed();
    }
}
exports.DummyAdapter = DummyAdapter;
DummyAdapter.__type = ['canHandle', 'getAdapterName', () => __ΩAdapterRequest, 'getRequest', () => __ΩIEmptyResponse, 'getResponse', () => __ΩOnErrorProps, 'props', 'onErrorWhileForwarding', 'P)0!P&0"Pn#0$Pn%0&P"$o\'#2($0)5""$6$'];
//# sourceMappingURL=dummy.adapter.js.map