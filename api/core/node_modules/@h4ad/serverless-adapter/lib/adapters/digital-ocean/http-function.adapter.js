"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpFunctionAdapter = exports.__ΩHttpFunctionAdapterOptions = void 0;
const { __ΩDigitalOceanHttpEvent } = require('../../@types/digital-ocean');
const { __ΩAdapterRequest } = require('../../contracts');
const { __ΩGetResponseAdapterProps } = require('../../contracts');
const { __ΩDigitalOceanHttpResponse } = require('../../@types/digital-ocean/digital-ocean-http-response');
const { __ΩOnErrorProps } = require('../../contracts');
const core_1 = require("../../core");
const __ΩHttpFunctionAdapterOptions = ['stripBasePath', 'P&4!8M'];
exports.__ΩHttpFunctionAdapterOptions = __ΩHttpFunctionAdapterOptions;
/**
 * The adapter to handle requests from Digital Ocean Functions when called from HTTP Endpoint.
 *
 * @example
 * ```typescript
 * const stripBasePath = '/any/custom/base/path'; // default ''
 * const adapter = new HttpFunctionAdapter({ stripBasePath });
 * ```
 *
 * @breadcrumb Adapters / Digital Ocean / HttpFunctionAdapter
 * @public
 */
class HttpFunctionAdapter {
    //#region Constructor
    /**
     * Default constructor
     *
     * @param options - The options to customize the {@link HttpFunctionAdapter}
     */
    constructor(options) {
        this.options = options;
    }
    //#endregion
    //#region Public Methods
    /**
     * {@inheritDoc}
     */
    getAdapterName() {
        return HttpFunctionAdapter.name;
    }
    /**
     * {@inheritDoc}
     */
    canHandle(event) {
        const digitalOceanHttpEvent = event;
        return (!!digitalOceanHttpEvent &&
            digitalOceanHttpEvent.__ow_path !== undefined &&
            digitalOceanHttpEvent.__ow_method !== undefined &&
            digitalOceanHttpEvent.__ow_headers !== undefined);
    }
    /**
     * {@inheritDoc}
     */
    getRequest(event) {
        const headers = event.__ow_headers;
        const method = event.__ow_method.toUpperCase();
        const path = this.getPathFromEvent(event);
        let body;
        if (event.__ow_body) {
            const [bufferBody, contentLength] = (0, core_1.getEventBodyAsBuffer)(event.__ow_body, !!event.__ow_isBase64Encoded);
            body = bufferBody;
            headers['content-length'] = String(contentLength);
        }
        const remoteAddress = headers['x-forwarded-for'];
        return {
            method,
            headers,
            body,
            remoteAddress,
            path,
        };
    }
    /**
     * {@inheritDoc}
     */
    getResponse({ headers: responseHeaders, body, statusCode, }) {
        const headers = (0, core_1.getFlattenedHeadersMap)(responseHeaders);
        return {
            statusCode,
            body,
            headers,
        };
    }
    /**
     * {@inheritDoc}
     */
    onErrorWhileForwarding({ error, delegatedResolver, respondWithErrors, event, log, }) {
        const body = respondWithErrors ? error.stack : '';
        const errorResponse = this.getResponse({
            event,
            statusCode: 500,
            body: body || '',
            headers: {},
            isBase64Encoded: false,
            log,
        });
        delegatedResolver.succeed(errorResponse);
    }
    //#endregion
    //#region Protected Methods
    /**
     * Get path from event with query strings
     *
     * @param event - The event sent by digital ocean
     */
    getPathFromEvent(event) {
        var _a;
        const stripBasePath = (0, core_1.getDefaultIfUndefined)((_a = this.options) === null || _a === void 0 ? void 0 : _a.stripBasePath, '');
        const replaceRegex = new RegExp(`^${stripBasePath}`);
        const path = event.__ow_path.replace(replaceRegex, '');
        const queryParams = event.__ow_query;
        return (0, core_1.getPathWithQueryStringParams)(path, queryParams || {});
    }
}
exports.HttpFunctionAdapter = HttpFunctionAdapter;
HttpFunctionAdapter.__type = [() => __ΩHttpFunctionAdapterOptions, 'options', 'constructor', 'getAdapterName', 'event', 'canHandle', () => __ΩDigitalOceanHttpEvent, () => __ΩAdapterRequest, 'getRequest', () => __ΩGetResponseAdapterProps, () => __ΩDigitalOceanHttpEvent, 'param0', () => __ΩDigitalOceanHttpResponse, 'getResponse', () => __ΩOnErrorProps, () => __ΩDigitalOceanHttpEvent, () => __ΩDigitalOceanHttpResponse, 'onErrorWhileForwarding', () => __ΩDigitalOceanHttpEvent, 'getPathFromEvent', () => __ΩDigitalOceanHttpEvent, () => __ΩDigitalOceanHttpResponse, 'Pn!2"8<9"0#P&0$P#2%!0&Pn\'2%n(0)Pn+o*"2,n-0.Pn0n1o/#2,$02Pn32%&04<5n5$n66$'];
//# sourceMappingURL=http-function.adapter.js.map