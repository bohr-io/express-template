import { DigitalOceanHttpEvent } from '../../@types/digital-ocean';
import { DigitalOceanHttpResponse } from '../../@types/digital-ocean/digital-ocean-http-response';
import { AdapterContract, AdapterRequest, GetResponseAdapterProps, OnErrorProps } from '../../contracts';
/**
 * The options to customize the {@link HttpFunctionAdapter}
 *
 * @breadcrumb Adapters / Digital Ocean / HttpFunctionAdapter
 * @public
 */
export interface HttpFunctionAdapterOptions {
    /**
     * Strip base path for custom domains
     *
     * @defaultValue ''
     */
    stripBasePath?: string;
}
/**
 * The adapter to handle requests from Digital Ocean Functions when called from HTTP Endpoint.
 *
 * @example
 * ```typescript
 * const stripBasePath = '/any/custom/base/path'; // default ''
 * const adapter = new HttpFunctionAdapter({ stripBasePath });
 * ```
 *
 * @breadcrumb Adapters / Digital Ocean / HttpFunctionAdapter
 * @public
 */
export declare class HttpFunctionAdapter implements AdapterContract<DigitalOceanHttpEvent, void, DigitalOceanHttpResponse> {
    protected readonly options?: HttpFunctionAdapterOptions | undefined;
    /**
     * Default constructor
     *
     * @param options - The options to customize the {@link HttpFunctionAdapter}
     */
    constructor(options?: HttpFunctionAdapterOptions | undefined);
    /**
     * {@inheritDoc}
     */
    getAdapterName(): string;
    /**
     * {@inheritDoc}
     */
    canHandle(event: unknown): event is DigitalOceanHttpEvent;
    /**
     * {@inheritDoc}
     */
    getRequest(event: DigitalOceanHttpEvent): AdapterRequest;
    /**
     * {@inheritDoc}
     */
    getResponse({ headers: responseHeaders, body, statusCode, }: GetResponseAdapterProps<DigitalOceanHttpEvent>): DigitalOceanHttpResponse;
    /**
     * {@inheritDoc}
     */
    onErrorWhileForwarding({ error, delegatedResolver, respondWithErrors, event, log, }: OnErrorProps<DigitalOceanHttpEvent, DigitalOceanHttpResponse>): void;
    /**
     * Get path from event with query strings
     *
     * @param event - The event sent by digital ocean
     */
    protected getPathFromEvent(event: DigitalOceanHttpEvent): string;
}
export declare type __Î©HttpFunctionAdapterOptions = any[];
