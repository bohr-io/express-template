import type { APIGatewayProxyResult, Context } from 'aws-lambda';
import type { APIGatewayProxyEvent } from 'aws-lambda/trigger/api-gateway-proxy';
import { AdapterContract, AdapterRequest, GetResponseAdapterProps, OnErrorProps } from '../../contracts';
/**
 * The options to customize the {@link ApiGatewayV1Adapter}
 *
 * @breadcrumb Adapters / AWS / ApiGatewayV1Adapter
 * @public
 */
export interface ApiGatewayV1Options {
    /**
     * Strip base path for custom domains
     *
     * @defaultValue ''
     */
    stripBasePath?: string;
}
/**
 * The adapter to handle requests from AWS Api Gateway V1
 *
 * As per {@link https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-known-issues.html | know issues}, we throw an exception when you send the `transfer-encoding=chunked`, currently, API Gateway doesn't support chunked transfer.
 *
 * @remarks This adapter is not fully compatible with \@vendia/serverless-express, on \@vendia they filter `transfer-encoding=chunked` but we throw an exception.
 *
 * @example
 * ```typescript
 * const stripBasePath = '/any/custom/base/path'; // default ''
 * const adapter = new ApiGatewayV1Adapter({ stripBasePath });
 * ```
 *
 * {@link https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html | Event Reference}
 *
 * @breadcrumb Adapters / AWS / ApiGatewayV1Adapter
 * @public
 */
export declare class ApiGatewayV1Adapter implements AdapterContract<APIGatewayProxyEvent, Context, APIGatewayProxyResult> {
    protected readonly options?: ApiGatewayV1Options | undefined;
    /**
     * Default constructor
     *
     * @param options - The options to customize the {@link ApiGatewayV1Adapter}
     */
    constructor(options?: ApiGatewayV1Options | undefined);
    /**
     * {@inheritDoc}
     */
    getAdapterName(): string;
    /**
     * {@inheritDoc}
     */
    canHandle(event: unknown): event is APIGatewayProxyEvent;
    /**
     * {@inheritDoc}
     */
    getRequest(event: APIGatewayProxyEvent): AdapterRequest;
    /**
     * {@inheritDoc}
     */
    getResponse({ headers: responseHeaders, body, isBase64Encoded, statusCode, response, }: GetResponseAdapterProps<APIGatewayProxyEvent>): APIGatewayProxyResult;
    /**
     * {@inheritDoc}
     */
    onErrorWhileForwarding({ error, delegatedResolver, respondWithErrors, event, log, }: OnErrorProps<APIGatewayProxyEvent, APIGatewayProxyResult>): void;
    /**
     * Get path from event with query strings
     *
     * @param event - The event sent by serverless
     */
    protected getPathFromEvent(event: APIGatewayProxyEvent): string;
}
export declare type __Î©ApiGatewayV1Options = any[];
