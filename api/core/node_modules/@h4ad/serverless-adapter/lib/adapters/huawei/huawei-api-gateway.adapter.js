"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HuaweiApiGatewayAdapter = exports.__ΩHuaweiApiGatewayOptions = void 0;
const { __ΩHuaweiApiGatewayEvent } = require('../../@types/huawei');
const { __ΩAdapterRequest } = require('../../contracts');
const { __ΩGetResponseAdapterProps } = require('../../contracts');
const { __ΩHuaweiApiGatewayResponse } = require('../../@types/huawei');
const { __ΩOnErrorProps } = require('../../contracts');
const { __ΩHuaweiContext } = require('../../@types/huawei');
const core_1 = require("../../core");
const __ΩHuaweiApiGatewayOptions = ['stripBasePath', 'P&4!8M'];
exports.__ΩHuaweiApiGatewayOptions = __ΩHuaweiApiGatewayOptions;
/**
 * The adapter to handle requests from Huawei Api Gateway
 *
 * @example
 * ```typescript
 * const stripBasePath = '/any/custom/base/path'; // default ''
 * const adapter = new ApiGatewayAdapter({ stripBasePath });
 * ```
 *
 * @breadcrumb Adapters / Huawei / HuaweiApiGatewayAdapter
 * @public
 *
 * {@link https://support.huaweicloud.com/intl/en-us/devg-functiongraph/functiongraph_02_0102.html#functiongraph_02_0102__li5178638110137 | Event Reference}
 */
class HuaweiApiGatewayAdapter {
    //#region Constructor
    /**
     * Default constructor
     *
     * @param options - The options to customize the {@link HuaweiApiGatewayAdapter}
     */
    constructor(options) {
        this.options = options;
    }
    //#endregion
    //#region Public Methods
    /**
     * {@inheritDoc}
     */
    getAdapterName() {
        return HuaweiApiGatewayAdapter.name;
    }
    /**
     * {@inheritDoc}
     */
    canHandle(event) {
        const apiGatewayEvent = event;
        return !!(apiGatewayEvent &&
            apiGatewayEvent.httpMethod &&
            apiGatewayEvent.requestContext &&
            apiGatewayEvent.requestContext.apiId &&
            apiGatewayEvent.requestContext.stage &&
            apiGatewayEvent.requestContext.requestId &&
            // to avoid conflict with api gateway v1 of aws
            !('multiValueQueryStringParameters' in apiGatewayEvent));
    }
    /**
     * {@inheritDoc}
     */
    getRequest(event) {
        const method = event.httpMethod;
        const path = this.getPathFromEvent(event);
        const headers = (0, core_1.getFlattenedHeadersMap)(event.headers, ',', true);
        let body;
        if (event.body) {
            const [bufferBody, contentLength] = (0, core_1.getEventBodyAsBuffer)(event.body, event.isBase64Encoded);
            body = bufferBody;
            headers['content-length'] = String(contentLength);
        }
        const remoteAddress = headers['x-real-ip'];
        return {
            method,
            headers,
            body,
            remoteAddress,
            path,
        };
    }
    /**
     * {@inheritDoc}
     */
    getResponse({ headers: responseHeaders, body, isBase64Encoded, statusCode, }) {
        const headers = (0, core_1.getMultiValueHeadersMap)(responseHeaders);
        return {
            statusCode,
            body,
            headers,
            isBase64Encoded,
        };
    }
    /**
     * {@inheritDoc}
     */
    onErrorWhileForwarding({ error, delegatedResolver, respondWithErrors, event, log, }) {
        const body = respondWithErrors ? error.stack : '';
        const errorResponse = this.getResponse({
            event,
            statusCode: 500,
            body: body || '',
            headers: {},
            isBase64Encoded: false,
            log,
        });
        delegatedResolver.succeed(errorResponse);
    }
    //#endregion
    //#region Protected Methods
    /**
     * Get path from event with query strings
     *
     * @param event - The event sent by serverless
     */
    getPathFromEvent(event) {
        var _a;
        const stripBasePath = (0, core_1.getDefaultIfUndefined)((_a = this.options) === null || _a === void 0 ? void 0 : _a.stripBasePath, '');
        const replaceRegex = new RegExp(`^${stripBasePath}`);
        const path = event.path.replace(replaceRegex, '');
        const queryParams = event.queryStringParameters;
        return (0, core_1.getPathWithQueryStringParams)(path, queryParams);
    }
}
exports.HuaweiApiGatewayAdapter = HuaweiApiGatewayAdapter;
HuaweiApiGatewayAdapter.__type = [() => __ΩHuaweiApiGatewayOptions, 'options', 'constructor', 'getAdapterName', 'event', 'canHandle', () => __ΩHuaweiApiGatewayEvent, () => __ΩAdapterRequest, 'getRequest', () => __ΩGetResponseAdapterProps, () => __ΩHuaweiApiGatewayEvent, 'param0', () => __ΩHuaweiApiGatewayResponse, 'getResponse', () => __ΩOnErrorProps, () => __ΩHuaweiApiGatewayEvent, () => __ΩHuaweiApiGatewayResponse, 'onErrorWhileForwarding', () => __ΩHuaweiApiGatewayEvent, 'getPathFromEvent', () => __ΩHuaweiApiGatewayEvent, () => __ΩHuaweiContext, () => __ΩHuaweiApiGatewayResponse, 'Pn!2"8<9"0#P&0$P#2%!0&Pn\'2%n(0)Pn+o*"2,n-0.Pn0n1o/#2,$02Pn32%&04<5n5n6n76$'];
//# sourceMappingURL=huawei-api-gateway.adapter.js.map